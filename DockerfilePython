# BUILDER
FROM python:3.7-buster as builder
MAINTAINER Nakashi

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1

# RUN mkdir /code
# WORKDIR /code
WORKDIR /usr/src/app
# ADD ./code/django_rest_api/requirements.txt /code/
# ADD ./.env.dev /code/
# RUN apk add --update --no-cache postgresql-client jpeg-dev
# RUN apk add --update --no-cache --virtual .tmp-build-deps \
#       gcc libc-dev linux-headers postgresql-dev musl-dev zlib zlib-dev \
#       jpeg-dev libjpeg python3-dev
# RUN apk update
# RUN apk add \
#       gcc libc-dev linux-headers postgresql-dev musl-dev zlib zlib-dev \
#       jpeg-dev libjpeg python3-dev postgresql-client jpeg-dev
# RUN pip install -r requirements.txt
RUN apt-get update && \
      apt-get install -y \
      build-essential libssl-dev libffi-dev libblas3 \
      libc6 liblapack3 gcc libc-dev musl-dev \
      python3-dev postgresql-client netcat
# RUN apt install sudo
# RUN sudo apt-get install -y netcat
RUN pip install --upgrade pip
COPY ./code/django_rest_api .

COPY ./code/django_rest_api/requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


# FINAL
FROM python:3.7-buster

RUN mkdir -p /home/app

ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static && mkdir $APP_HOME/media
WORKDIR $APP_HOME

# RUN apt-get update && apt-get install libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# ADD ./code/django_rest_api/entrypoint.sh /code/
COPY ./code/django_rest_api/entrypoint.sh $APP_HOME

COPY ./code/django_rest_api $APP_HOME

# RUN addgroup -S app && adduser -S app -G app
RUN adduser app
RUN chown -R app:app $APP_HOME
USER app
# RUN adduser -D user
# USER user

# ENTRYPOINT ["/code/entrypoint.sh"]
# ENTRYPOINT ["/home/app/web/entrypoint.sh"]
{"version":3,"sources":["App.module.css","features/post/Post.module.css","features/core/Core.module.css","features/auth/Auth.module.css","features/post/postSlice.ts","features/auth/authSlice.ts","features/auth/Auth.tsx","features/post/Post.tsx","features/core/EditProfile.tsx","features/core/NewPost.tsx","features/core/Core.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","apiUrlPost","process","apiUrlComment","fetchAsyncGetPosts","createAsyncThunk","a","axios","get","headers","Authorization","localStorage","localJWT","res","data","fetchAsyncNewPost","newPost","uploadData","FormData","append","title","img","name","post","fetchAsyncPatchLiked","liked","currentLiked","current","isOverlapped","forEach","new","String","length","put","id","patch","fetchAsyncGetComments","fetchAsyncPostComment","comment","postSlice","createSlice","initialState","isLoadingPost","openNewPost","posts","userPost","created_on","comments","text","userComment","reducers","fetchPostStart","state","fetchPostEnd","setOpenNewPost","resetOpenNewPost","extraReducers","builder","addCase","fulfilled","action","payload","map","actions","selectIsLoadingPost","selectOpenNewPost","selectPosts","selectComments","apiUrl","fetchAsyncLogin","authen","console","log","fetchAsyncRegister","auth","fetchAsyncCreateProf","nickName","fetchAsyncUpdateProf","profile","fetchAsyncGetMyProf","fetchAsyncGetProfs","authSlice","openSignIn","openSignUp","openProfile","isLoadingAuth","myprofile","userProfile","profiles","fetchCredStart","fetchCredEnd","setOpenSignIn","resetOpenSignIn","setOpenSignUp","resetOpenSignUp","setOpenProfile","resetOpenProfile","editNickname","setItem","access","prof","selectIsLoadingAuth","selectOpenSignIn","selectOpenSignUp","selectOpenProfile","selectProfile","selectProfiles","customStyles","overlay","backgroundColor","content","top","left","width","height","padding","transform","Auth","Modal","setAppElement","useSelector","dispatch","useDispatch","isOpen","onRequestClose","style","initialErrors","email","initialValues","password","onSubmit","values","resultReg","match","validationSchema","Yup","shape","required","min","handleSubmit","handleChange","handleBlur","errors","touched","isValid","className","styles","auth_signUp","auth_title","auth_progress","CircularProgress","TextField","placeholder","type","onChange","onBlur","value","auth_error","Button","variant","color","disabled","auth_text","onClick","result","useStyles","makeStyles","theme","small","spacing","marginRight","Post","postId","loginId","imageUrl","classes","useState","setText","commentsOnPost","filter","com","postComment","e","preventDefault","packet","handlerLiked","post_header","Avatar","post_avatar","src","post_image","alt","post_text","Checkbox","post_checkBox","icon","FavoriteBorder","checkedIcon","Favorite","checked","some","like","AvatarGroup","max","post_avatarGroup","find","Divider","post_comments","post_comment","post_strong","post_commentBox","post_input","target","post_button","EditProfile","image","setImage","updateProfile","core_signUp","core_title","hidden","files","IconButton","fileInput","document","getElementById","click","NewPost","setTitle","StyledBadge","withStyles","badge","boxShadow","palette","background","paper","position","borderRadius","animation","border","opacity","Badge","Core","useEffect","fetchBootLoader","rejected","core_header","core_btnModal","core_logout","removeItem","overlap","anchorOrigin","vertical","horizontal","core_posts","Grid","container","slice","reverse","item","xs","md","App","app","store","configureStore","reducer","authReducer","postReducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb4102c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1-uEC\",\"post_header\":\"Post_post_header__38Oy0\",\"post_avatar\":\"Post_post_avatar__334I0\",\"post_image\":\"Post_post_image__x9cFE\",\"post_text\":\"Post_post_text__cA3ML\",\"post_checkBox\":\"Post_post_checkBox__z3Pg8\",\"post_avatarGroup\":\"Post_post_avatarGroup__3w2Uj\",\"post_comments\":\"Post_post_comments__LRl-T\",\"post_comment\":\"Post_post_comment__1f1Ef\",\"post_commentBox\":\"Post_post_commentBox__1Gykt\",\"post_input\":\"Post_post_input__1EAqP\",\"post_button\":\"Post_post_button__3Zy9l\",\"post_strong\":\"Post_post_strong__SBUVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"core_title\":\"Core_core_title__3Fgeq\",\"core_signUp\":\"Core_core_signUp__3AQKY\",\"core_text\":\"Core_core_text__1p9Cy\",\"core_header\":\"Core_core_header__2o3ti\",\"core_btnModal\":\"Core_core_btnModal__3Z0dS\",\"core_logout\":\"Core_core_logout__3tLwx\",\"core_posts\":\"Core_core_posts__2xCPu\",\"core_progress\":\"Core_core_progress__29G_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_title\":\"Auth_auth_title__3IiVY\",\"auth_error\":\"Auth_auth_error__35GYZ\",\"auth_signUp\":\"Auth_auth_signUp__23bGX\",\"auth_headerImage\":\"Auth_auth_headerImage__kIVLc\",\"auth_text\":\"Auth_auth_text__1NS5E\",\"auth_progress\":\"Auth_auth_progress__2Lo8w\"};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { RootState } from \"../../app/store\"\nimport axios from \"axios\"\nimport { PROPS_NEWPOST, PROPS_LIKED, PROPS_COMMENT } from \"../types\"\n\nconst apiUrlPost = `${process.env.REACT_APP_DEV_API_URL}api/post/`\nconst apiUrlComment = `${process.env.REACT_APP_DEV_API_URL}api/comment/`\n\nexport const fetchAsyncGetPosts = createAsyncThunk(\"post/get\", async () => {\n  const res = await axios.get(apiUrlPost, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  })\n  return res.data\n})\n\nexport const fetchAsyncNewPost = createAsyncThunk(\n  \"post/post\",\n  async (newPost: PROPS_NEWPOST) => {\n    const uploadData = new FormData()\n    uploadData.append(\"title\", newPost.title)\n    newPost.img && uploadData.append(\"img\", newPost.img, newPost.img.name)\n    const res = await axios.post(apiUrlPost, uploadData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    })\n    return res.data\n  }\n)\n\nexport const fetchAsyncPatchLiked = createAsyncThunk(\n  \"post/patch\",\n  async (liked: PROPS_LIKED) => {\n    const currentLiked = liked.current\n    const uploadData = new FormData()\n\n    let isOverlapped = false\n    currentLiked.forEach((current) => {\n      if (current === liked.new) {\n        isOverlapped = true\n      } else {\n        uploadData.append(\"liked\", String(current))\n      }\n    })\n\n    if (!isOverlapped) {\n      uploadData.append(\"liked\", String(liked.new))\n    } else if (currentLiked.length === 1) {\n      uploadData.append(\"title\", liked.title)\n      const res = await axios.put(`${apiUrlPost}${liked.id}/`, uploadData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      })\n      return res.data\n    }\n    const res = await axios.patch(`${apiUrlPost}${liked.id}/`, uploadData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    })\n    return res.data\n  }\n)\n\nexport const fetchAsyncGetComments = createAsyncThunk(\n  \"comment/get\",\n  async () => {\n    const res = await axios.get(apiUrlComment, {\n      headers: {\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    })\n    return res.data\n  }\n)\n\nexport const fetchAsyncPostComment = createAsyncThunk(\n  \"comment/post\",\n  async (comment: PROPS_COMMENT) => {\n    const res = await axios.post(apiUrlComment, comment, {\n      headers: {\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    })\n    return res.data\n  }\n)\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    isLoadingPost: false,\n    openNewPost: false,\n    posts: [\n      {\n        id: 0,\n        title: \"\",\n        userPost: 0,\n        created_on: \"\",\n        img: \"\",\n        liked: [0],\n      },\n    ],\n    comments: [\n      {\n        id: 0,\n        text: \"\",\n        userComment: 0,\n        post: 0,\n      },\n    ],\n  },\n  reducers: {\n    fetchPostStart(state) {\n      state.isLoadingPost = true\n    },\n    fetchPostEnd(state) {\n      state.isLoadingPost = false\n    },\n    setOpenNewPost(state) {\n      state.openNewPost = true\n    },\n    resetOpenNewPost(state) {\n      state.openNewPost = false\n    },\n  },\n  extraReducers: (builder) => {\n    // @ts-ignore\n    builder.addCase(fetchAsyncGetPosts.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: action.payload,\n      }\n    })\n    // @ts-ignore\n    builder.addCase(fetchAsyncNewPost.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n      }\n    })\n    // @ts-ignore\n    builder.addCase(fetchAsyncGetComments.fulfilled, (state, action) => {\n      return {\n        ...state,\n        comments: action.payload,\n      }\n    })\n    // @ts-ignore\n    builder.addCase(fetchAsyncPostComment.fulfilled, (state, action) => {\n      return {\n        ...state,\n        comments: [...state.comments, action.payload],\n      }\n    })\n    // @ts-ignore\n    builder.addCase(fetchAsyncPatchLiked.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          // @ts-ignore\n          post.id === action.payload.id ? action.payload : post\n        ),\n      }\n    })\n  },\n})\n\nexport const {\n  fetchPostStart,\n  fetchPostEnd,\n  setOpenNewPost,\n  resetOpenNewPost,\n} = postSlice.actions\n\nexport const selectIsLoadingPost = (state: RootState) =>\n  state.post.isLoadingPost\nexport const selectOpenNewPost = (state: RootState) => state.post.openNewPost\nexport const selectPosts = (state: RootState) => state.post.posts\nexport const selectComments = (state: RootState) => state.post.comments\n\nexport default postSlice.reducer\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { RootState } from \"../../app/store\"\nimport axios from \"axios\"\nimport { PROPS_AUTHEN, PROPS_PROFILE, PROPS_NICKNAME, JWT } from \"../types\"\n\nconst apiUrl = process.env.REACT_APP_DEV_API_URL\n\nexport const fetchAsyncLogin = createAsyncThunk(\n  \"auth/post\",\n  async (authen: PROPS_AUTHEN) => {\n    const res = await axios.post<JWT>(`${apiUrl}authen/jwt/create`, authen, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    console.log(`fetchAsyncLogin: ${res.data}`)\n    return res.data\n  }\n)\n\nexport const fetchAsyncRegister = createAsyncThunk(\n  \"auth/register\",\n  async (auth: PROPS_AUTHEN) => {\n    const res = await axios.post(`${apiUrl}api/register/`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    console.log(`fetchAsyncRegister: ${res.data}`)\n    return res.data\n  }\n)\n\nexport const fetchAsyncCreateProf = createAsyncThunk(\n  \"profile/post\",\n  async (nickName: PROPS_NICKNAME) => {\n    const res = await axios.post(`${apiUrl}api/profile/`, nickName, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    })\n    console.log(`fetchAsyncCreateProf: ${res.data}`)\n    return res.data\n  }\n)\n\nexport const fetchAsyncUpdateProf = createAsyncThunk(\n  \"profile/put\",\n  async (profile: PROPS_PROFILE) => {\n    const uploadData = new FormData()\n    uploadData.append(\"nickName\", profile.nickName)\n    profile.img && uploadData.append(\"img\", profile.img, profile.img.name)\n    const res = await axios.put(\n      `${apiUrl}api/profile/${profile.id}/`,\n      uploadData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    )\n    console.log(`fetchAsyncUpdateProf: ${res.data}`)\n    return res.data\n  }\n)\n\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/myprofile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  })\n  console.log(`etchAsyncGetMyProf: ${res.data[0]}`)\n  return res.data[0]\n})\n\nexport const fetchAsyncGetProfs = createAsyncThunk(\"profiles/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/profile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  })\n  console.log(`fetchAsyncGetProfs: ${res.data}`)\n  return res.data\n})\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    openSignIn: true,\n    openSignUp: false,\n    openProfile: false,\n    isLoadingAuth: false,\n    myprofile: {\n      id: 0,\n      nickName: \"\",\n      userProfile: 0,\n      created_on: \"\",\n      img: \"\",\n    },\n    profiles: [\n      {\n        id: 0,\n        nickName: \"\",\n        userProfile: 0,\n        created_on: \"\",\n        img: \"\",\n      },\n    ],\n  },\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true\n    },\n    fetchCredEnd(state) {\n      state.isLoadingAuth = false\n    },\n    setOpenSignIn(state) {\n      state.openSignIn = true\n    },\n    resetOpenSignIn(state) {\n      state.openSignIn = false\n    },\n    setOpenSignUp(state) {\n      state.openSignUp = true\n    },\n    resetOpenSignUp(state) {\n      state.openSignUp = false\n    },\n    setOpenProfile(state) {\n      state.openProfile = true\n    },\n    resetOpenProfile(state) {\n      state.openProfile = false\n    },\n    editNickname(state, action) {\n      state.myprofile.nickName = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      localStorage.setItem(\"localJWT\", action.payload.access)\n    })\n    builder.addCase(fetchAsyncCreateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload\n    })\n    builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload\n    })\n    builder.addCase(fetchAsyncGetProfs.fulfilled, (state, action) => {\n      state.profiles = action.payload\n    })\n    builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload\n      state.profiles = state.profiles.map((prof) =>\n        prof.id === action.payload.id ? action.payload : prof\n      )\n    })\n  },\n})\n\nexport const {\n  fetchCredStart,\n  fetchCredEnd,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  editNickname,\n} = authSlice.actions\n\nexport const selectIsLoadingAuth = (state: RootState) =>\n  state.auth.isLoadingAuth\nexport const selectOpenSignIn = (state: RootState) => state.auth.openSignIn\nexport const selectOpenSignUp = (state: RootState) => state.auth.openSignUp\nexport const selectOpenProfile = (state: RootState) => state.auth.openProfile\nexport const selectProfile = (state: RootState) => state.auth.myprofile\nexport const selectProfiles = (state: RootState) => state.auth.profiles\n\nexport default authSlice.reducer\n","import React from \"react\"\nimport { AppDispatch } from \"../../app/store\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport styles from \"./Auth.module.css\"\nimport Modal from \"react-modal\"\nimport { Formik } from \"formik\"\nimport * as Yup from \"yup\"\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\"\n\nimport { fetchAsyncGetPosts, fetchAsyncGetComments } from \"../post/postSlice\"\n\nimport {\n  selectIsLoadingAuth,\n  selectOpenSignIn,\n  selectOpenSignUp,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  fetchCredStart,\n  fetchCredEnd,\n  fetchAsyncLogin,\n  fetchAsyncRegister,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n  fetchAsyncCreateProf,\n} from \"./authSlice\"\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"#777777\",\n  },\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n\n    width: 280,\n    height: 350,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\nconst Auth: React.FC = () => {\n  Modal.setAppElement(\"#root\")\n  const openSignIn = useSelector(selectOpenSignIn)\n  const openSignUp = useSelector(selectOpenSignUp)\n  const isLoadingAuth = useSelector(selectIsLoadingAuth)\n  const dispatch: AppDispatch = useDispatch()\n\n  return (\n    <>\n      <Modal\n        isOpen={openSignUp}\n        onRequestClose={async () => {\n          await dispatch(resetOpenSignUp())\n        }}\n        style={customStyles}\n      >\n        <Formik\n          initialErrors={{ email: \"required\" }}\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={async (values) => {\n            await dispatch(fetchCredStart())\n            const resultReg = await dispatch(fetchAsyncRegister(values))\n\n            if (fetchAsyncRegister.fulfilled.match(resultReg)) {\n              await dispatch(fetchAsyncLogin(values))\n              await dispatch(fetchAsyncCreateProf({ nickName: \"anonymous\" }))\n\n              await dispatch(fetchAsyncGetProfs())\n              await dispatch(fetchAsyncGetPosts())\n              await dispatch(fetchAsyncGetComments())\n              await dispatch(fetchAsyncGetMyProf())\n            }\n            await dispatch(fetchCredEnd())\n            await dispatch(resetOpenSignUp())\n          }}\n          validationSchema={Yup.object().shape({\n            email: Yup.string()\n              .email(\"email format is wrong\")\n              .required(\"email is must\"),\n            password: Yup.string().required(\"password is must\").min(4),\n          })}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid,\n          }) => (\n            <div>\n              <form onSubmit={handleSubmit}>\n                <div className={styles.auth_signUp}>\n                  <h1 className={styles.auth_title}>Q3 SNS</h1>\n                  <br />\n                  <div className={styles.auth_progress}>\n                    {isLoadingAuth && <CircularProgress />}\n                  </div>\n                  <br />\n\n                  <TextField\n                    placeholder=\"email\"\n                    type=\"input\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n                  <br />\n                  {touched.email && errors.email ? (\n                    <div className={styles.auth_error}>{errors.email}</div>\n                  ) : null}\n\n                  <TextField\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                  {touched.password && errors.password ? (\n                    <div className={styles.auth_error}>{errors.password}</div>\n                  ) : null}\n                  <br />\n                  <br />\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!isValid}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                  <br />\n                  <br />\n                  <span\n                    className={styles.auth_text}\n                    onClick={async () => {\n                      await dispatch(setOpenSignIn())\n                      await dispatch(resetOpenSignUp())\n                    }}\n                  >\n                    You already have a account ?\n                  </span>\n                </div>\n              </form>\n            </div>\n          )}\n        </Formik>\n      </Modal>\n\n      <Modal\n        isOpen={openSignIn}\n        onRequestClose={async () => {\n          await dispatch(resetOpenSignIn())\n        }}\n        style={customStyles}\n      >\n        <Formik\n          initialErrors={{ email: \"required\" }}\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={async (values) => {\n            await dispatch(fetchCredStart())\n            const result = await dispatch(fetchAsyncLogin(values))\n            if (fetchAsyncLogin.fulfilled.match(result)) {\n              await dispatch(fetchAsyncGetProfs())\n              await dispatch(fetchAsyncGetPosts())\n              await dispatch(fetchAsyncGetComments())\n              await dispatch(fetchAsyncGetMyProf())\n            }\n            await dispatch(fetchCredEnd())\n            await dispatch(resetOpenSignIn())\n          }}\n          validationSchema={Yup.object().shape({\n            email: Yup.string()\n              .email(\"email format is wrong\")\n              .required(\"email is must\"),\n            password: Yup.string().required(\"password is must\").min(4),\n          })}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid,\n          }) => (\n            <div>\n              <form onSubmit={handleSubmit}>\n                <div className={styles.auth_signUp}>\n                  <h1 className={styles.auth_title}>Q3 SNS</h1>\n                  <br />\n                  <div className={styles.auth_progress}>\n                    {isLoadingAuth && <CircularProgress />}\n                  </div>\n                  <br />\n\n                  <TextField\n                    placeholder=\"email\"\n                    type=\"input\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n\n                  {touched.email && errors.email ? (\n                    <div className={styles.auth_error}>{errors.email}</div>\n                  ) : null}\n                  <br />\n\n                  <TextField\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                  {touched.password && errors.password ? (\n                    <div className={styles.auth_error}>{errors.password}</div>\n                  ) : null}\n                  <br />\n                  <br />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!isValid}\n                    type=\"submit\"\n                  >\n                    Login\n                  </Button>\n                  <br />\n                  <br />\n                  <span\n                    className={styles.auth_text}\n                    onClick={async () => {\n                      await dispatch(resetOpenSignIn())\n                      await dispatch(setOpenSignUp())\n                    }}\n                  >\n                    You don't have a account ?\n                  </span>\n                </div>\n              </form>\n            </div>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  )\n}\n\nexport default Auth\n","import React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { selectProfiles } from \"../auth/authSlice\";\n\nimport {\n  selectComments,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncPostComment,\n  fetchAsyncPatchLiked,\n} from \"./postSlice\";\n\nimport { PROPS_POST } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Post: React.FC<PROPS_POST> = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked,\n}) => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n  const profiles = useSelector(selectProfiles);\n  const comments = useSelector(selectComments);\n  const [text, setText] = useState(\"\");\n\n  const commentsOnPost = comments.filter((com) => {\n    return com.post === postId;\n  });\n\n  const prof = profiles.filter((prof) => {\n    return prof.userProfile === userPost;\n  });\n\n  const postComment = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const packet = { text: text, post: postId };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPostComment(packet));\n    await dispatch(fetchPostEnd());\n    setText(\"\");\n  };\n\n  const handlerLiked = async () => {\n    const packet = {\n      id: postId,\n      title: title,\n      current: liked,\n      new: loginId,\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPatchLiked(packet));\n    await dispatch(fetchPostEnd());\n  };\n\n  if (title) {\n    return (\n      <div className={styles.post}>\n        <div className={styles.post_header}>\n          <Avatar className={styles.post_avatar} src={prof[0]?.img} />\n          <h3>{prof[0]?.nickName}</h3>\n        </div>\n        <img className={styles.post_image} src={imageUrl} alt=\"\" />\n\n        <h4 className={styles.post_text}>\n          <Checkbox\n            className={styles.post_checkBox}\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            checked={liked.some((like) => like === loginId)}\n            onChange={handlerLiked}\n          />\n          <strong> {prof[0]?.nickName}</strong> {title}\n          <AvatarGroup max={7}>\n            {liked.map((like) => (\n              <Avatar\n                className={styles.post_avatarGroup}\n                key={like}\n                src={profiles.find((prof) => prof.userProfile === like)?.img}\n              />\n            ))}\n          </AvatarGroup>\n        </h4>\n\n        <Divider />\n        <div className={styles.post_comments}>\n          {commentsOnPost.map((comment) => (\n            <div key={comment.id} className={styles.post_comment}>\n              <Avatar\n                src={\n                  profiles.find(\n                    (prof) => prof.userProfile === comment.userComment\n                  )?.img\n                }\n                className={classes.small}\n              />\n              <p>\n                <strong className={styles.post_strong}>\n                  {\n                    profiles.find(\n                      (prof) => prof.userProfile === comment.userComment\n                    )?.nickName\n                  }\n                </strong>\n                {comment.text}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <form className={styles.post_commentBox}>\n          <input\n            className={styles.post_input}\n            type=\"text\"\n            placeholder=\"add a comment\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <button\n            disabled={!text.length}\n            className={styles.post_button}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Post;\n","import React, { useState } from \"react\"\nimport Modal from \"react-modal\"\nimport styles from \"./Core.module.css\"\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { AppDispatch } from \"../../app/store\"\n\nimport { File } from \"../types\"\n\nimport {\n  editNickname,\n  selectProfile,\n  selectOpenProfile,\n  resetOpenProfile,\n  fetchCredStart,\n  fetchCredEnd,\n  fetchAsyncUpdateProf,\n} from \"../auth/authSlice\"\n\nimport { Button, TextField, IconButton } from \"@material-ui/core\"\nimport { MdAddAPhoto } from \"react-icons/md\"\n// import PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\"\n// import AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\"\n\nconst customStyles = {\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n\n    width: 280,\n    height: 220,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\nconst EditProfile: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch()\n  const openProfile = useSelector(selectOpenProfile)\n  const profile = useSelector(selectProfile)\n  const [image, setImage] = useState<File | null>(null)\n\n  const updateProfile = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault()\n    const packet = { id: profile.id, nickName: profile.nickName, img: image }\n\n    await dispatch(fetchCredStart())\n    await dispatch(fetchAsyncUpdateProf(packet))\n    await dispatch(fetchCredEnd())\n    await dispatch(resetOpenProfile())\n  }\n\n  const handlerEditPicture = () => {\n    const fileInput = document.getElementById(\"imageInput\")\n    fileInput?.click()\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={openProfile}\n        onRequestClose={async () => {\n          await dispatch(resetOpenProfile())\n        }}\n        style={customStyles}\n      >\n        <form className={styles.core_signUp}>\n          <h1 className={styles.core_title}>SNS clone</h1>\n\n          <br />\n          <TextField\n            placeholder=\"nickname\"\n            type=\"text\"\n            value={profile?.nickName}\n            onChange={(e) => dispatch(editNickname(e.target.value))}\n          />\n\n          <input\n            type=\"file\"\n            id=\"imageInput\"\n            hidden={true}\n            onChange={(e) => setImage(e.target.files![0])}\n          />\n          <br />\n          <IconButton onClick={handlerEditPicture}>\n            <MdAddAPhoto />\n          </IconButton>\n          <br />\n          <Button\n            disabled={!profile?.nickName}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={updateProfile}\n          >\n            Update\n          </Button>\n        </form>\n      </Modal>\n    </>\n  )\n}\n\nexport default EditProfile\n","import React, { useState } from \"react\"\nimport Modal from \"react-modal\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { AppDispatch } from \"../../app/store\"\n\nimport styles from \"./Core.module.css\"\n\nimport { File } from \"../types\"\n\nimport {\n  selectOpenNewPost,\n  resetOpenNewPost,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncNewPost,\n} from \"../post/postSlice\"\n\nimport { Button, TextField, IconButton } from \"@material-ui/core\"\nimport { MdAddAPhoto } from \"react-icons/md\"\n// import PhotoCameraIcon from \"@mui/icons-material/PhotoCamera\"\n// import AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\"\n\nconst customStyles = {\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n\n    width: 280,\n    height: 220,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\nconst NewPost: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch()\n  const openNewPost = useSelector(selectOpenNewPost)\n\n  const [image, setImage] = useState<File | null>(null)\n  const [title, setTitle] = useState(\"\")\n\n  const handlerEditPicture = () => {\n    const fileInput = document.getElementById(\"imageInput\")\n    fileInput?.click()\n  }\n\n  const newPost = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault()\n    const packet = { title: title, img: image }\n    await dispatch(fetchPostStart())\n    await dispatch(fetchAsyncNewPost(packet))\n    await dispatch(fetchPostEnd())\n    setTitle(\"\")\n    setImage(null)\n    dispatch(resetOpenNewPost())\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={openNewPost}\n        onRequestClose={async () => {\n          await dispatch(resetOpenNewPost())\n        }}\n        style={customStyles}\n      >\n        <form className={styles.core_signUp}>\n          <h1 className={styles.core_title}>Q3 SNS</h1>\n\n          <br />\n          <TextField\n            placeholder=\"Please enter caption\"\n            type=\"text\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n\n          <input\n            type=\"file\"\n            id=\"imageInput\"\n            hidden={true}\n            onChange={(e) => setImage(e.target.files![0])}\n          />\n          <br />\n          <IconButton onClick={handlerEditPicture}>\n            <MdAddAPhoto />\n          </IconButton>\n          <br />\n          <Button\n            disabled={!title || !image}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={newPost}\n          >\n            New post\n          </Button>\n        </form>\n      </Modal>\n    </>\n  )\n}\n\nexport default NewPost\n","import React, { useEffect } from \"react\"\nimport Auth from \"../auth/Auth\"\n\nimport styles from \"./Core.module.css\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { AppDispatch } from \"../../app/store\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Button,\n  Grid,\n  Avatar,\n  Badge,\n  CircularProgress,\n} from \"@material-ui/core\"\n\nimport { MdAddAPhoto } from \"react-icons/md\"\n\nimport {\n  editNickname,\n  selectProfile,\n  selectIsLoadingAuth,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n} from \"../auth/authSlice\"\n\nimport {\n  selectPosts,\n  selectIsLoadingPost,\n  setOpenNewPost,\n  resetOpenNewPost,\n  fetchAsyncGetPosts,\n  fetchAsyncGetComments,\n} from \"../post/postSlice\"\n\nimport Post from \"../post/Post\"\nimport EditProfile from \"./EditProfile\"\nimport NewPost from \"./NewPost\"\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"$ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}))(Badge)\n\nconst Core: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch()\n  const profile = useSelector(selectProfile)\n  const posts = useSelector(selectPosts)\n  const isLoadingPost = useSelector(selectIsLoadingPost)\n  const isLoadingAuth = useSelector(selectIsLoadingAuth)\n\n  useEffect(() => {\n    const fetchBootLoader = async () => {\n      if (localStorage.localJWT) {\n        dispatch(resetOpenSignIn())\n        const result = await dispatch(fetchAsyncGetMyProf())\n        if (fetchAsyncGetMyProf.rejected.match(result)) {\n          dispatch(setOpenSignIn())\n          return null\n        }\n        await dispatch(fetchAsyncGetPosts())\n        await dispatch(fetchAsyncGetProfs())\n        await dispatch(fetchAsyncGetComments())\n      }\n    }\n    fetchBootLoader()\n  }, [dispatch])\n\n  return (\n    <div>\n      <Auth />\n      <EditProfile />\n      <NewPost />\n      <div className={styles.core_header}>\n        <h1 className={styles.core_title}>Q3 SNS</h1>\n        {profile?.nickName ? (\n          <>\n            <button\n              className={styles.core_btnModal}\n              onClick={() => {\n                dispatch(setOpenNewPost())\n                dispatch(resetOpenProfile())\n              }}\n            >\n              <MdAddAPhoto />\n            </button>\n            <div className={styles.core_logout}>\n              {(isLoadingPost || isLoadingAuth) && <CircularProgress />}\n              <Button\n                onClick={() => {\n                  localStorage.removeItem(\"localJWT\")\n                  dispatch(editNickname(\"\"))\n                  dispatch(resetOpenProfile())\n                  dispatch(resetOpenNewPost())\n                  dispatch(setOpenSignIn())\n                }}\n              >\n                Logout\n              </Button>\n              <button\n                className={styles.core_btnModal}\n                onClick={() => {\n                  dispatch(setOpenProfile())\n                  dispatch(resetOpenNewPost())\n                }}\n              >\n                <StyledBadge\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  variant=\"dot\"\n                >\n                  <Avatar alt=\"who?\" src={profile.img} />{\" \"}\n                </StyledBadge>\n              </button>\n            </div>\n          </>\n        ) : (\n          <div>\n            <Button\n              onClick={() => {\n                dispatch(setOpenSignIn())\n                dispatch(resetOpenSignUp())\n              }}\n            >\n              LogIn\n            </Button>\n            <Button\n              onClick={() => {\n                dispatch(setOpenSignUp())\n                dispatch(resetOpenSignIn())\n              }}\n            >\n              SignUp\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {profile?.nickName && (\n        <>\n          <div className={styles.core_posts}>\n            <Grid container spacing={4}>\n              {posts\n                .slice(0)\n                .reverse()\n                .map((post) => (\n                  <Grid key={post.id} item xs={12} md={4}>\n                    <Post\n                      postId={post.id}\n                      title={post.title}\n                      loginId={profile.userProfile}\n                      userPost={post.userPost}\n                      imageUrl={post.img}\n                      liked={post.liked}\n                    />\n                  </Grid>\n                ))}\n            </Grid>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Core\n","import React from \"react\";\r\n\r\nimport styles from \"./App.module.css\";\r\nimport Core from \"./features/core/Core\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Core />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\n\r\nimport authReducer from \"../features/auth/authSlice\";\r\nimport postReducer from \"../features/post/postSlice\";\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    post: postReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}